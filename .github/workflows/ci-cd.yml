name: CI/CD Pipeline

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  test:
    name: Test
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v3
    
    - name: Set up Node.js
      uses: actions/setup-node@v3
      with:
        node-version: '18'
        cache: 'npm'
        cache-dependency-path: package-lock.json
    
    - name: Install dependencies
      run: npm ci --ignore-scripts
    
    - name: Run tests
      run: npm test
      
    - name: Upload test coverage
      uses: actions/upload-artifact@v4
      with:
        name: coverage
        path: coverage/
        retention-days: 5
        if-no-files-found: warn
        
  build:
    name: Build
    needs: test
    runs-on: ubuntu-latest
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'
    
    steps:
    - uses: actions/checkout@v3
    
    - name: Set up Node.js
      uses: actions/setup-node@v3
      with:
        node-version: '18'
        cache: 'npm'
        cache-dependency-path: package-lock.json
    
    - name: Install dependencies
      run: npm ci --ignore-scripts
    
    - name: Build application
      run: npm run build
      
    - name: Upload build artifacts
      uses: actions/upload-artifact@v4
      with:
        name: dist
        path: dist/
        retention-days: 5
        if-no-files-found: error
        
  docker:
    name: Build and Push Docker Image
    needs: build
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v3
    
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v2
    
    - name: Generate build ID
      id: build-id
      run: echo "::set-output name=id::$(date +'%Y%m%d%H%M%S')"
      
    - name: Build Docker image
      uses: docker/build-push-action@v4
      with:
        context: .
        push: false
        tags: cicd-demo:${{ steps.build-id.outputs.id }}
        build-args: |
          VERSION=${{ steps.build-id.outputs.id }}
        
    - name: Archive Docker image info
      run: echo "Docker image built with tag cicd-demo:${{ steps.build-id.outputs.id }}" > docker-info.txt
      
    - name: Upload Docker info
      uses: actions/upload-artifact@v4
      with:
        name: docker-info
        path: docker-info.txt
        retention-days: 5
        if-no-files-found: error
